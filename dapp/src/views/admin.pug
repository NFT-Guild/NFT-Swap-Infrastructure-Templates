html
   head
      link(href='https://fonts.googleapis.com/css?family=Poiret One' rel='stylesheet')
      link(href='https://fonts.googleapis.com/css?family=Outfit' rel='stylesheet')
      title NFT Swap Pool Admin
      link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous")
      link(rel="stylesheet" type="text/css" href="stylesheets/styles.css")
      script(type="module" src="javascripts/wallet-integration.js")
      script(src="/javascripts/helpers.js")
      script(src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.0/FileSaver.min.js" integrity="sha512-csNcFYJniKjJxRWRV1R7fvnXrycHP6qDR21mgz1ZP55xY5d+aHLfo9/FcGDQLfn2IfngbAHd8LdfsagcCqgTcQ==" crossorigin = "anonymous" referrerpolicy = "no-referrer")
   body(class=`${themeclass}`)
      
      div(class="d-flex flex-row justify-content-around padding")
         div(class="name-and-logo" class="justify-content-start show-hover-pointer" onclick="location.href='/'")
            img(src=`images/logo${themeclass}.png` width="300px" style="float: right")
            br
            h1(style="float: right") NFT Swap Pool Admin
         div(class="justify-content-end")
            div(class=`btn-group`)
               button(type="button" id="wallet_connector_button" class=`btn connect-wallet ${themeclass} d-flex dropdown-toggle` data-bs-toggle="dropdown" aria-expanded="false") LOADING CONNECTOR...
               ul(class=`dropdown-menu ${themeclass}` id="wallet_connector_dropdown")
            div(class="btn-group")
               button(type="button" class=`btn connect-wallet ${themeclass} d-flex dropdown-toggle` id="themeSelectionDropdown" data-bs-toggle="dropdown" aria-expanded="false") 
               ul(class=`dropdown-menu ${themeclass}`)
                  li
                     div(class=`dropdown-item ${themeclass} d-flex` onclick="setCookie('swap_pool_theme', 'light-mode'); document.location.reload();")
                        svg(xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-brightness-high" style="margin-right: 5px;" viewBox="0 0 16 16")
                           path(d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z")
                        a(class=`dropdown-item ${themeclass}` href="#") Light mode
                  li
                     div(class=`dropdown-item ${themeclass} d-flex` onclick="setCookie('swap_pool_theme', 'dark-mode'); document.location.reload();")
                        svg(xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-moon" style="margin-right: 5px;" viewBox="0 0 16 16")
                           path(d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278zM4.858 1.311A7.269 7.269 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.316 7.316 0 0 0 5.205-2.162c-.337.042-.68.063-1.029.063-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286z")
                        a(class=`dropdown-item ${themeclass}` href="#") Dark mode
  
      div(class="d-flex flex-row justify-content-end padding" width="70%")
         div(class="input-group mb-3")
            span(class=`input-group-text${themeclass}` id="basic-addon3") POLICY ID
            input(type="text" class=`form-control textfield ${themeclass}` id="policyidInput" aria-describedby="basic-addon3")
         button(type="button" class=`btn themed-color${themeclass}` id="loadPolicyButton" onclick=`const policyid = document.getElementById('policyidInput').value; showElem('search_field'); showElem('num_selected'); showElem('select_nfts_label'); setActivePage(1,'policy'); loadPolicyAssets(policyid, 'policy-nft-list','', '${themeclass}', 0, ${nftPerPage});`) LOAD

      div(class="light" style="display: none; margin-bottom: 10px; text-align: center;" id="select_nfts_label") Select the NFTs you want to allow to swap in the swap pool
      div(id="search-field-row" class="d-flex flex-row justify-content-around")
            div(id="num_selected" style="display: none;") 0 SELECTED
            div(id="search_field" style="display: none;")
               div(class="input-group mb-3")
                  input(type="text" id="search_field_input" class=`form-control searchfield${themeclass}` placeholder="SEARCH" aria-label="SEARCH" aria-describedby="basic-addon2")
                  span(class=`input-group-text${themeclass} padding` id="basic-addon2")
                     svg(xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" viewBox="0 0 16 16" class=`button-color${themeclass} show-hover-pointer` onclick=`document.getElementById('search_field_button').click();`)
                        path(d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z")
                  button(style="display: none;" id="search_field_button" onclick=`const policyid = document.getElementById('policyidInput').value; const filterCriterion = document.getElementById('search_field_input').value; loadPolicyAssets(policyid, 'policy-nft-list',filterCriterion, '${themeclass}');`)
                  svg(xmlns="http://www.w3.org/2000/svg" height="48" width="48" fill="currentColor" class=`button-color${themeclass} show-hover-pointer` onclick=`document.getElementById('search_field_button').click();`)
                     path(d="M24 40q-6.65 0-11.325-4.675Q8 30.65 8 24q0-6.65 4.675-11.325Q17.35 8 24 8q4.25 0 7.45 1.725T37 14.45V8h3v12.7H27.3v-3h8.4q-1.9-3-4.85-4.85Q27.9 11 24 11q-5.45 0-9.225 3.775Q11 18.55 11 24q0 5.45 3.775 9.225Q18.55 37 24 37q4.15 0 7.6-2.375 3.45-2.375 4.8-6.275h3.1q-1.45 5.25-5.75 8.45Q29.45 40 24 40Z")
          
      div(class="nft-list light d-flex mb-3 flex-row flex-wrap" id="policy-nft-list")

      nav(aria-label="Policy asset navigation")
         ul(class=`pagination ${themeclass} justify-content-end padding`)
            li(class="page-item disabled")
               a(class="page-link" href="#" id="policypagesetprevious" onclick="stepPageSetPrev('policy'); loadPolicyPageContent(getActivePage('policy'));")= '<<'
            li(class="page-item disabled")
               a(class="page-link" href="#" id="policypageprevious" onclick="stepPagePrev('policy'); loadPolicyPageContent(getActivePage('policy'));")= '<'
            li(class="page-item" aria-current="page")
               a(class="page-link" href="#" id="policypage1" onclick=`const pNum = parseInt(this.innerText); setActivePage(pNum, 'policy'); loadPolicyPageContent(pNum);`) 1
            li(class="page-item")
               a(class="page-link" href="#" id="policypage2" onclick="const pNum = parseInt(this.innerText); setActivePage(pNum, 'policy'); loadPolicyPageContent(pNum);") 2
            li(class="page-item")
               a(class="page-link" href="#" id="policypage3" onclick="const pNum = parseInt(this.innerText); setActivePage(pNum, 'policy'); loadPolicyPageContent(pNum);") 3
            li(class="page-item")
               a(class="page-link" href="#" id="policypagenext" onclick="stepPageNext('policy'); loadPolicyPageContent(getActivePage('policy'));")= '>'
            li(class="page-item")
               a(class="page-link" href="#" id="policypagesetnext" onclick="stepPageSetNext('policy'); loadPolicyPageContent(getActivePage('policy'));")= '>>'

      div(class="d-flex flex-row justify-content-end padding")

         div(id="create_swap_pool_dropdown_menu" class="btn-group")
               button(type="button" id="create_swap_pool_button" class=`btn select-contract${themeclass} d-flex dropdown-toggle text-wrap` data-bs-toggle="dropdown" aria-expanded="false") CREATE SWAP POOL
               ul(class=`dropdown-menu ${themeclass}` id="create_swap_pool_dropdown")
                  li
                     h6(class="dropdown-header") SPECIFIC SWAP
                  li
                     div(class=`dropdown-item ${themeclass} d-flex`)
                        a(class=`dropdown-item ${themeclass}` href="#" onclick="const policyid = document.getElementById('policyidInput').value; if(policyid.length != 56) {alert('Please provide valid policy id');return;} buildSpecificSwap(policyid).then(swapPoolInfo => { message = swapPoolInfo.message; const mBoxTitle = document.getElementById('messageBoxLabel'); if(message.indexOf('Redeemer') > -1 || message.indexOf('error') > -1) { mBoxTitle.innerText='Something went wrong'; } else { mBoxTitle.innerText=message; } document.getElementById('message-box-content').innerHTML=swapPoolInfo.message; document.getElementById('swap-pool-script').value = JSON.stringify(swapPoolInfo.swapPoolContractScript); document.getElementById('swap-pool-address').value = swapPoolInfo.swapPoolAddress; displayMBoxScriptFields(); const messageBox = new bootstrap.Modal('#messageBox', { keyboard: false }); messageBox.show();});") POLICY WIDE POOL
                  li
                     div(class=`dropdown-item ${themeclass} d-flex`)
                        a(class=`dropdown-item ${themeclass}` href="#" onclick="const policyid = document.getElementById('policyidInput').value; if(policyid.length != 56) {alert('Please provide valid policy id');return;} else if(numSelectedPoolNFTs < 1){alert('Please select some NFTs for the filter');return;} buildSpecificFilteredSwap(policyid).then(swapPoolInfo => { message = swapPoolInfo.message; const mBoxTitle = document.getElementById('messageBoxLabel'); if(message.indexOf('Redeemer') > -1 || message.indexOf('error') > -1) { mBoxTitle.innerText='Something went wrong'; } else { mBoxTitle.innerText=message; } document.getElementById('message-box-content').innerHTML=swapPoolInfo.message; document.getElementById('swap-pool-script').value = JSON.stringify(swapPoolInfo.swapPoolContractScript); document.getElementById('swap-pool-address').value = swapPoolInfo.swapPoolAddress; document.getElementById('filter-nft-hex').value = JSON.stringify(swapPoolInfo.nftsHex); displayMBoxFilteredScriptFields(); const messageBox = new bootstrap.Modal('#messageBox', { keyboard: false }); messageBox.show();});") FILTERED POOL
                  li
                     div(class=`dropdown-item ${themeclass} d-flex` data-bs-toggle="modal" data-bs-target="#buildRuleContractDialog")
                        a(class=`dropdown-item ${themeclass}` href="#" onclick="") RULE BASED POOL
                  li
                     h6(class="dropdown-header") RANDOM SWAP
                  li
                     div(class=`dropdown-item ${themeclass} d-flex`)
                        a(class=`dropdown-item ${themeclass}` href="#" onclick="const policyid = document.getElementById('policyidInput').value; if(policyid.length != 56) {alert('Please provide valid policy id');return;} buildRandomSwap(policyid).then(swapPoolInfo => { message = swapPoolInfo.message; const mBoxTitle = document.getElementById('messageBoxLabel'); if(message.indexOf('Redeemer') > -1 || message.indexOf('error') > -1) { mBoxTitle.innerText='Something went wrong'; } else { mBoxTitle.innerText=message; } document.getElementById('message-box-content').innerHTML=swapPoolInfo.message; document.getElementById('swap-pool-script').value = JSON.stringify(swapPoolInfo.swapPoolContractScript); document.getElementById('swap-pool-address').value = swapPoolInfo.swapPoolAddress; displayMBoxScriptFields(); const messageBox = new bootstrap.Modal('#messageBox', { keyboard: false }); messageBox.show();});") POLICY WIDE POOL

         div(id="add_nft_to_pool_dropdown_menu" class="btn-group")
               button(type="button" id="add_nft_to_pool_selection_button" class=`btn select-contract${themeclass} d-flex dropdown-toggle text-wrap` data-bs-toggle="dropdown" aria-expanded="false") ADD NFT(S) TO POOL
                  span(class="spinner-border" role="status" id="addNFTSpinner" style="display:none;") 
               ul(class=`dropdown-menu ${themeclass}` id="add_nft_to_pool_selection_dropdown")
         
         div(id="remove_nft_from_pool_dropdown_menu" class="btn-group")
               button(type="button" id="remove_nft_from_pool_selection_button" class=`btn select-contract${themeclass} d-flex dropdown-toggle text-wrap` data-bs-toggle="dropdown" aria-expanded="false") REMOVE NFT(S) FROM POOL
                  span(class="spinner-border" role="status" id="removeNFTSpinner" style="display:none;") 
               ul(class=`dropdown-menu ${themeclass}` id="remove_nft_from_pool_selection_dropdown")
         
         div(id="deposit_to_pool_dropdown_menu" class="btn-group")
               button(type="button" id="deposit_to_pool_selection_button" class=`btn select-contract${themeclass} d-flex dropdown-toggle text-wrap` data-bs-toggle="dropdown" aria-expanded="false") TEST DEPOSIT
                  span(class="spinner-border" role="status" id="testDepositSpinner" style=" display:none;") 
               ul(class=`dropdown-menu ${themeclass}` id="deposit_to_pool_selection_dropdown")
                        
         div(id="withdraw_from_pool_dropdown_menu" class="btn-group")
               button(type="button" id="withdraw_from_pool_selection_button" class=`btn select-contract${themeclass} d-flex dropdown-toggle text-wrap` data-bs-toggle="dropdown" aria-expanded="false") TEST WITHDRAWAL
                  span(class="spinner-border" role="status" id="testWithdrawSpinner" style=" display:none;")
               ul(class=`dropdown-menu ${themeclass}` id="withdraw_from_pool_selection_dropdown")
         
      div(class="modal modal-dialog modal-xl fade" id="messageBox" tabindex="-1" aria-labelledby="messageBoxLabel" aria-hidden="true")
         div(class="modal-dialog")
            div(class="modal-content")
               div(class="modal-header message-box-header")
                  button(type="button" class=`btn-close button-color${themeclass}` data-bs-dismiss="modal" aria-label="Close")
               div(class=`modal-body ${themeclass} message-box${themeclass}`) 
                  div(class="d-flex flex-row")
                     h1(class="modal-title fs-5 padding" id="messageBoxLabel") Message Title
                  div(class=`light flex-wrap message-box${themeclass}` id="message-box-content") Message text goes here ...
                  div(class=`d-flex flex-row mb-3` )
                     div(class=`input-group` id="message-box-pool-script-row" style="display: none;")
                        span(class=`input-group-text${themeclass}`) Swap pool script
                        textarea(class=`form-control textfield ${themeclass}` aria-label="Swap pool script" id="swap-pool-script")
                        
                        svg(xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class=`bi bi-clipboard button-color${themeclass} show-hover-pointer` viewBox="0 0 16 16" onclick="copyToClipboard(document.getElementById('swap-pool-script').value);")
                           path(d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z")
                           path(d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z")
                  div(class=`d-flex flex-row mb-3`)
                     div(class=`input-group` id="message-box-filter-row" style="display: none;")
                        span(class=`input-group-text${themeclass}`) Swap pool filter
                        textarea(class=`form-control textfield ${themeclass}` aria-label="Swap pool filter" id="filter-nft-hex")
                        
                        svg(xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class=`bi bi-clipboard button-color${themeclass} show-hover-pointer` viewBox="0 0 16 16" onclick="copyToClipboard(document.getElementById('filter-nft-hex').value);")
                           path(d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z")
                           path(d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z")
                  div(class=`d-flex flex-row mb-3`)
                     div(class=`input-group` id="message-box-rules-row" style="display: none;")
                        span(class=`input-group-text${themeclass}`) Swap pool rules
                        textarea(class=`form-control textfield ${themeclass}` aria-label="Swap pool rules" id="swap-pool-rules")
                        
                        svg(xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class=`bi bi-clipboard button-color${themeclass} show-hover-pointer` viewBox="0 0 16 16" onclick="copyToClipboard(document.getElementById('swap-pool-rules').value);")
                           path(d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z")
                           path(d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z")

                  div(class=`d-flex flex-row mb-3`)
                     div(class=`input-group` id="message-box-pool-addr-row" style="display: none;")
                        span(class=`input-group-text${themeclass}`) Swap pool address
                        input(type="text" class=`form-control textfield ${themeclass}` aria-label="Swap pool address" aria-describedby="swap-pool-address" id="swap-pool-address")
                        
                        svg(xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class=`bi bi-clipboard button-color${themeclass} show-hover-pointer` viewBox="0 0 16 16" onclick="copyToClipboard(document.getElementById('swap-pool-address').value);")
                           path(d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z")
                           path(d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z")
                  div(class="d-flex flex-row justify-content-between")
                     button(type="button" class=`btn themed-color${themeclass}` data-bs-dismiss="modal") OK
                     button(type="button" id="message-box-plutus-button" style="display: none;" class=`btn themed-color${themeclass}` onclick=`var blob = new Blob(['{"type": "PlutusScriptV2","description": "","cborHex": "'+ JSON.parse(document.getElementById("swap-pool-script").value).script +'"}'], {type: "text/plain;charset=utf-8" }); saveAs(blob, "swap-pool-script.plutus");`) DOWNLOAD PLUTUS SCRIPT
                     
               div(class="message-box-footer")
      div(class="modal modal-dialog-scrollable modal-xl fade" id="buildRuleContractDialog" tabindex="-1" aria-labelledby="buildRuleContractDialogLabel" aria-hidden="true")
         div(class="modal-dialog")
            div(class="modal-content")
               div(class=`modal-header ${themeclass}`)
                  button(type="button" class=`btn-close themed-color${themeclass}` data-bs-dismiss="modal" aria-label="Close" onclick="clearRuleContractBuilderDialog()")
               div(class=`modal-body ${themeclass} light`)
                  div(class="d-flex flex-row")
                     
                     h1(class="modal-title fs-3 padding" id="buildRuleContractDialogLabel") Rule based swap pool settings
                  div(class="input-group mb-3")
                     span(class=`input-group-text${themeclass}` id="basic-addon3") POLICY ID
                     input(type="text" class=`form-control textfield ${themeclass}` id="dlgPolicyidInput" style="text-align:right;" aria-describedby="basic-addon3")
                  div(class="input-group mb-3")
                     span(class=`input-group-text${themeclass}` id="basic-addon3") NFT NAME STARTS WITH
                     input(type="text" class=`form-control textfield ${themeclass}` id="dlgNamePrefixInput" style="text-align:right;" aria-describedby="basic-addon3" onChange="document.getElementById('dlgDigitStartInput').value = this.value.length; updateSettingsVisualized('settingsVisualized', 'exampleVisualized')")
                  div(class="input-group mb-3")
                     span(class=`input-group-text${themeclass}` id="basic-addon3") DIGIT START POSITION
                     input(type="text" class=`form-control textfield ${themeclass}` id="dlgDigitStartInput" style="text-align:right;" aria-describedby="basic-addon3" onChange="updateSettingsVisualized('settingsVisualized', 'exampleVisualized')")
                  div(class="input-group mb-3")
                     span(class=`input-group-text${themeclass}` id="basic-addon3") DIGIT LENGTH
                     input(type="text" class=`form-control textfield ${themeclass}` id="dlgDigitLengthInput" style="text-align:right;" aria-describedby="basic-addon3" onChange="updateSettingsVisualized('settingsVisualized', 'exampleVisualized')")
                  div(class="input-group mb-3")
                     span(class=`input-group-text${themeclass}` id="basic-addon3") DIGIT START RANGE
                     input(type="text" class=`form-control textfield ${themeclass}` id="dlgDigitRangeStartInput" style="text-align:right;" aria-describedby="basic-addon3" onChange="updateSettingsVisualized('settingsVisualized', 'exampleVisualized')")
                  div(class="input-group mb-3")
                     span(class=`input-group-text${themeclass}` id="basic-addon3") DIGIT END RANGE
                     input(type="text" class=`form-control textfield ${themeclass}` id="dlgDigitRangeEndInput" style="text-align:right;" aria-describedby="basic-addon3" onChange="updateSettingsVisualized('settingsVisualized', 'exampleVisualized')")

                  div(class="d-flex flex-row justify-content-between")
                     h1(class="modal-title fs-7 padding" id="ruleVisualizedDialogLabel") Current settings visualized:
                     h1(class="modal-title fs-5 padding" id="settingsVisualized")

                  div(class="d-flex flex-row justify-content-between")
                     h1(class="modal-title fs-7 padding" id="buildRuleContractDialogLabel") Example NFT name according to rule:
                     h1(class="modal-title fs-5 padding" id="exampleVisualized")

                  div(class="d-flex flex-row justify-content-between")
                     div(class="form-check")
                        input(class="form-check-input" type="checkbox" value="" id="verifyRulesCheck" onChange="if(this.checked) { const policyid = document.getElementById('dlgPolicyidInput').value; if(policyid.length != 56) { alert('invalid policy id'); this.checked = false; return;} if(verifyDlgFields()) {setActive('confirmCreateRuleButton')} else { alert('Please ensure all fields have a valid value before continuing'); this.checked = false; } } else { setDisabled('confirmCreateRuleButton')}" disabled)
                        label(class="form-check-label" for="verifyRulesCheck") I have verified the rule and example to be OK
                  
               div(class="modal-footer d-flex justify-content-between")
                  button(type="button" class=`btn themed-color${themeclass}` data-bs-dismiss="modal" onclick="clearRuleContractBuilderDialog()") BACK
                  button(type="button" class=`btn themed-color${themeclass}` data-bs-dismiss="modal" id="confirmCreateRuleButton" onclick="buildSpecificRuleSwap(getInputValue('dlgPolicyidInput'), getInputValue('dlgNamePrefixInput'), getInputValue('dlgDigitStartInput'), getInputValue('dlgDigitLengthInput'), getInputValue('dlgDigitRangeStartInput'), getInputValue('dlgDigitRangeEndInput')).then(swapPoolInfo => { message = swapPoolInfo.message; const mBoxTitle = document.getElementById('messageBoxLabel'); if(message.indexOf('Redeemer') > -1 || message.indexOf('error') > -1) { mBoxTitle.innerText='Something went wrong'; } else { mBoxTitle.innerText=message; } document.getElementById('message-box-content').innerHTML=swapPoolInfo.message; document.getElementById('swap-pool-script').value = JSON.stringify(swapPoolInfo.swapPoolContractScript); document.getElementById('swap-pool-address').value = swapPoolInfo.swapPoolAddress; document.getElementById('swap-pool-rules').value = JSON.stringify(swapPoolInfo.swapPoolRules); displayMBoxRulesScriptFields(); const messageBox = new bootstrap.Modal('#messageBox', { keyboard: false }); messageBox.show();}); clearRuleContractBuilderDialog();" disabled) CREATE RULE POOL

      div(class="modal modal-dialog-scrollable modal-xl fade" id="selectNFTsDialog" tabindex="-1" aria-labelledby="selectNFTsDialogLabel" aria-hidden="true")
         div(class="modal-dialog")
            div(class="modal-content")
               div(class=`modal-header ${themeclass}`)
                  button(type="button" class=`btn-close themed-color${themeclass}` data-bs-dismiss="modal" aria-label="Close" onclick="resetOnClick()")
               div(class=`modal-body ${themeclass} light`)
                  div(class="d-flex flex-row")
                     
                     h1(class="modal-title fs-5 padding" id="selectNFTsDialogLabel") Select NFTs to add to swap pool
                  div(class="nft-list light align-content-start d-flex mb-3 flex-row flex-wrap" id="selectable_nfts") Loading ...

                  nav(aria-label="Add asset navigation" id="addAssetNavigation" style="display:none;")
                     ul(class=`pagination ${themeclass} justify-content-end padding`)
                        li(class="page-item disabled")
                           a(class="page-link" href="#" id="walletpagesetprevious" onclick="stepPageSetPrev('wallet'); loadAddPageContent(getActivePage('wallet'));")= '<<'
                        li(class="page-item disabled")
                           a(class="page-link" href="#" id="walletpageprevious" onclick="stepPagePrev('wallet'); loadAddPageContent(getActivePage('wallet'));")= '<'
                        li(class="page-item" aria-current="page")
                           a(class="page-link" href="#" id="walletpage1" onclick=`const pNum = parseInt(this.innerText); setActivePage(pNum, 'wallet'); loadAddPageContent(pNum);`) 1
                        li(class="page-item")
                           a(class="page-link" href="#" id="walletpage2" onclick="const pNum = parseInt(this.innerText); setActivePage(pNum, 'wallet'); loadAddPageContent(pNum);") 2
                        li(class="page-item")
                           a(class="page-link" href="#" id="walletpage3" onclick="const pNum = parseInt(this.innerText); setActivePage(pNum, 'wallet'); loadAddPageContent(pNum);") 3
                        li(class="page-item")
                           a(class="page-link" href="#" id="walletpagenext" onclick="stepPageNext('wallet'); loadAddPageContent(getActivePage('wallet'));")= '>'
                        li(class="page-item")
                           a(class="page-link" href="#" id="walletpagesetnext" onclick="stepPageSetNext('wallet'); loadAddPageContent(getActivePage('wallet'));")= '>>'
                  nav(aria-label="Remove asset navigation" id="removeAssetNavigation" style="display:none;")
                     ul(class=`pagination ${themeclass} justify-content-end padding`)
                        li(class="page-item disabled")
                           a(class="page-link" href="#" id="poolpagesetprevious" onclick="stepPageSetPrev('pool'); loadRemovePageContent(getActivePage('pool'));")= '<<'
                        li(class="page-item disabled")
                           a(class="page-link" href="#" id="poolpageprevious" onclick="stepPagePrev('pool'); loadRemovePageContent(getActivePage('pool'));")= '<'
                        li(class="page-item" aria-current="page")
                           a(class="page-link" href="#" id="poolpage1" onclick=`const pNum = parseInt(this.innerText); setActivePage(pNum, 'pool'); loadRemovePageContent(pNum);`) 1
                        li(class="page-item")
                           a(class="page-link" href="#" id="poolpage2" onclick="const pNum = parseInt(this.innerText); setActivePage(pNum, 'pool'); loadRemovePageContent(pNum);") 2
                        li(class="page-item")
                           a(class="page-link" href="#" id="poolpage3" onclick="const pNum = parseInt(this.innerText); setActivePage(pNum, 'pool'); loadRemovePageContent(pNum);") 3
                        li(class="page-item")
                           a(class="page-link" href="#" id="poolpagenext" onclick="stepPageNext('pool'); loadRemovePageContent(getActivePage('pool'));")= '>'
                        li(class="page-item")
                           a(class="page-link" href="#" id="poolpagesetnext" onclick="stepPageSetNext('pool'); loadRemovePageContent(getActivePage('pool'));")= '>>'

               div(class="modal-footer d-flex justify-content-between")
                  button(type="button" class=`btn themed-color${themeclass}` data-bs-dismiss="modal" onclick="resetOnClick()") BACK
                  button(type="button" class=`btn themed-color${themeclass}` data-bs-dismiss="modal" id="confirmAddNFTsButton" onclick=".then(message => { const mBoxTitle = document.getElementById('messageBoxLabel'); if(errorReturned(message)) { mBoxTitle.innerText='Something went wrong'; } else { mBoxTitle.innerText='Add NFT(s) successful'; } document.getElementById('message-box-content').innerHTML=removeTechnicalGibberish(message); displayMBoxMessageFieldOnly(); const messageBox = new bootstrap.Modal('#messageBox', { keyboard: false }); resetOnClick(this); messageBox.show();});") CONFIRM ADD  
                  button(type="button" class=`btn themed-color${themeclass}` data-bs-dismiss="modal" id="confirmRemoveNFTsButton" onclick=".then(message => { const mBoxTitle = document.getElementById('messageBoxLabel'); if(errorReturned(message)) { mBoxTitle.innerText='Something went wrong'; } else { mBoxTitle.innerText='Remove NFT(s) successful'; } document.getElementById('message-box-content').innerHTML=removeTechnicalGibberish(message); displayMBoxMessageFieldOnly(); const messageBox = new bootstrap.Modal('#messageBox', { keyboard: false }); resetOnClick(this); messageBox.show();});") CONFIRM REMOVE
      -var onloadScript = `window.onload=function() { setActiveTheme('${themeclass}'); loadAddNFTDropdown(document.getElementById('add_nft_to_pool_selection_dropdown'), '${themeclass}', ${JSON.stringify(poolName)}, ${JSON.stringify(poolPolicyId)}, ${JSON.stringify(poolNFTNames)}, ${JSON.stringify(poolRules)}, ${nftPerPage}); loadRemoveNFTDropdown(document.getElementById('remove_nft_from_pool_selection_dropdown'), '${themeclass}', ${JSON.stringify(poolName)}, ${nftPerPage}); loadDepositDropdown(document.getElementById('deposit_to_pool_selection_dropdown'), '${themeclass}', ${JSON.stringify(poolName)}); loadWithdrawalDropdown(document.getElementById('withdraw_from_pool_selection_dropdown'), '${themeclass}', ${JSON.stringify(poolName)}); loadWalletConnector(document.getElementById('wallet_connector_dropdown'), document.getElementById('wallet_connector_button'),'${themeclass}'); const searchField = document.getElementById('search_field_input'); const searchButton = document.getElementById('search_field_button'); addEnterKeyListener(searchField, searchButton); };`;
      script !{onloadScript}
      -var walletStakeAddrScript = `async function getRewardAddresses() { if(!connectedWallet) { alert("Wallet is not yet loaded"); return null; } else { console.log('connectedWallet',connectedWallet); var api = await connectedWallet.enable(); const addresses = await api.getRewardAddresses(); var bech32Addresses = []; for(var i = 0; i < addresses.length; i++) { bech32Addresses.push(typhonjs.utils.getAddressFromHex(addresses[i]).getBech32()); } return bech32Addresses; } }`
      script !{walletStakeAddrScript}
      -var policyPagingScript = `function loadPolicyPageContent(pageNum) { const pOffset = (pageNum - 1) * ${nftPerPage}; const policyid = document.getElementById('policyidInput').value; const filterCriterion = document.getElementById('search_field_input').value; loadPolicyAssets(policyid, 'policy-nft-list',filterCriterion, '${themeclass}', pOffset, ${nftPerPage});}`
      script !{policyPagingScript}
      -var addPagingScript = `function loadAddPageContent(pageNum) { const pOffset = (pageNum - 1) * ${nftPerPage}; getRewardAddresses().then((addr) => { getAddressAssets(addr).then((assets) => { listNFTs(assets, document.getElementById('selectable_nfts'), 'wallet', '${themeclass}', currentPolicyId, currentNFTNames, currentRules, pOffset, ${nftPerPage}) } ) } ).catch((reason => console.log('error: '+ reason.message)));}`
      script !{addPagingScript}
      -var removePagingScript = `function loadRemovePageContent(pageNum) { const pOffset = (pageNum - 1) * ${nftPerPage}; getSwapPoolAddress(currentSwapPoolIndex).then((addr) => { getAddressAssets(addr).then((assets) => { currentPolicyId = null; currentNFTNames = null; currentRules = null; listNFTs(assets, document.getElementById('selectable_nfts'), 'pool', '${themeclass}', currentPolicyId, currentNFTNames, currentRules, pOffset, ${nftPerPage}) } ) } ).catch((reason => console.log('error: '+ reason.message)));}`
      script !{removePagingScript}

      script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous")
      script(src="https://cdn.jsdelivr.net/npm/@stricahq/typhonjs@1.2.8/dist/index.min.js")